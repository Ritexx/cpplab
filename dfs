#include<iostream>
#include<stack>
using namespace std;



void dfs(int arr[20][20], int source, int visited[20], int n){

    stack<int> s;
    s.push(source);
    visited[source]=1;

    while(!s.empty()){
        int i=s.top();
        cout<< "pop:"<<i<<endl;
        s.pop();
    

    for(int j=1; j<=n; j++)
    {
        if(arr[i][j]==1 && visited[j]==0){
            s.push(j);
            visited[j]=1;
        }
    }
}

}

int main()
{
    int n;
int source, arr[20][20], visited[20]={0};
    
    cout<<"enter the number of vertex : ";
    cin>> n;

    
    cout<< "enter the matix:"<<endl;
    for(int i=1; i<=n ; i++){
        for(int j=1; j<=n; j++){
            cin>>arr[i][j];
        }
    }

    cout<<"enter the starting node:";
    cin>>source;
    
   
    dfs(arr,source,visited,n);


}
