#include<iostream>
#include<queue>
using namespace std;

void bfs(int arr[20][20], int source, int visited[20], int n){
    queue<int> q;
    q.push(source);
    visited[source]=1;

    while(!q.empty()){
        int i= q.front();
        cout<< "poped : "<< i << endl;
        q.pop();

        for(int j=1; j<=n; j++){
        if(arr[i][j]==1 && visited[j]==0){
            q.push(j);
            visited[j]=1;
                
        }

     }

    }
    cout<<endl;
    
    
    
}


int main()
{
    int n;
    cout<< "enter the no of vertex :";
    cin>> n;

    int arr[20][20], visited[20]= {0};
    for(int i=1; i<=n; i++){
        for(int j=1; j<=n; j++){
            cin>>arr[i][j];
        }
    }

    int source;
    cout<<"enter the source vertex :";
    cin>>source;

    bfs(arr,source,visited,n);

    for(int i=1; i<=n; i++){
        if(visited[i]!=0){
            cout<<"node "<<i<<" is visited"<<endl;
        }
        else{
            cout<<"node "<< i<< " is not visited"<<endl;
        }
    }

    


}
